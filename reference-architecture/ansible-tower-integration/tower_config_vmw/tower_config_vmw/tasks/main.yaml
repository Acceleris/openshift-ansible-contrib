---

- name: Install git
  yum:
    name: git
    state: present
  become: true

- name: subscription-manager register
  command: subscription-manager register --username={{ RHSM_USERNAME }} --password={{ RHSM_PASSWORD }}
  become: true

- name: subscription-manager list
  command: subscription-manager list --available --pool-only --matches="Red Hat OpenShift Container Platform*"
  become: true
  register: rhsmout

#- debug:
#    var: rhsmout

#- debug:
#    var: rhsmout.stdout_lines[0]

- name: subscription-manager Red Hat OpenShift Container Platform, Premium
  command: subscription-manager attach --pool={{ rhsmout.stdout_lines[0] }}
  become: true

- name: subscription-manager repos --enable=rhel-7-fast-datapath-rpms
  command: subscription-manager repos --enable=rhel-7-fast-datapath-rpms
  become: true

- name: subscription-manager repos --enable=rhel-server-rhscl-7-rpms
  command: subscription-manager repos --enable=rhel-server-rhscl-7-rpms
  become: true

- name: subscription-manager repos --enable=rhel-7-server-ose-3.6-rpms
  command: subscription-manager repos --enable=rhel-7-server-ose-3.6-rpms
  become: true

- name: subscription-manager repos --enable=rhel-7-server-rpms
  command: subscription-manager repos --enable=rhel-7-server-rpms
  become: true

- name: subscription-manager repos --enable=rhel-7-server-extras-rpms
  command: subscription-manager repos --enable=rhel-7-server-extras-rpms
  become: true

- name: Install python27
  yum:
    name: python27
    state: present
  become: true

- name: Install atomic-openshift-utils
  yum:
    name: atomic-openshift-utils
    state: present
  become: true

- name: Install python-click
  yum:
    name: python-click
    state: present
  become: true

- name: Install python-ldap
  yum:
    name: python-ldap
    state: present
  become: true

- name: Install ansible
  yum:
    name: ansible
    state: present
  become: true

- name: Install epel-release-latest-7.noarch.rpm
  yum:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    state: present
  become: true

- name: Install python-iptools
  yum:
    name: python-iptools
    state: present
  become: true

- name: Install python2-pyvmomi
  yum:
    name: python2-pyvmomi
    state: present
  become: true

- name: Create tower organization
  tower_organization:
    name: "Default"
    description: "Set to Default since the trial license only allows one organization. You can change it if you have deep pockets"
    state: present
    tower_config_file: "~/.tower_cli.cfg"

- name: Add tower project for openshift-ansible-contrib
  tower_project:
    name: "openshift-ansible-contrib"
    description: "sync openshift-ansible-contrib"
    organization: "Default"
    scm_url: https://github.com/openshift/openshift-ansible-contrib.git
    scm_type: git
    scm_branch: vmw-3.6
    scm_update_on_launch: true
    state: present
    tower_config_file: "~/.tower_cli.cfg"

- name: Add tower project for ansible-redhat-access-insights-client
  tower_project:
    name: "ansible-redhat-access-insights-client"
    description: "sync ansible-redhat-access-insights-client"
    organization: "Default"
    scm_url: https://github.com/strategicdesignteam/ansible-redhat-access-insights-client.git
    scm_type: git
    scm_branch: master
    scm_update_on_launch: true
    state: present
    tower_config_file: "~/.tower_cli.cfg"

- name: Add tower project for cfme-ansible
  tower_project:
    name: "cfme-ansible"
    description: "sync cfme-ansible"
    organization: "Default"
    scm_url: https://github.com/strategicdesignteam/cfme-ansible.git
    scm_type: git
    scm_branch: master
    scm_update_on_launch: true
    state: present
    tower_config_file: "~/.tower_cli.cfg"

- name: Add tower inventory
  tower_inventory:
    name: "vmw-inventory"
    description: "Tower inventory for VMW"
    organization: "Default"
    state: present
    tower_config_file: "~/.tower_cli.cfg"

- name: Add tower credential for machine
  tower_credential:
    name: vmw-privkey
    kind: ssh
    become_method: sudo
    description: vmw-privkey
    organization: "Default"
    state: present
    ssh_key_data: "{{ VMW_MACHINE_SSH_KEY }}"
    username: root
    tower_config_file: "~/.tower_cli.cfg"

- name: Add tower credential for vmw
  tower_credential:
    name: vmw
    kind: vmware
    description: vmware
    host: "{{ VMW_HOST }}"
    organization: "Default"
    state: present
    username: "{{ VMW_USERNAME }}"
    password: "{{ VMW_PASSWORD }}"
    tower_config_file: "~/.tower_cli.cfg"

- name: Add tower group
  tower_group:
    name: vmw
    description: "Tower Group for VMW"
    source: vmware
    credential: vmw
    inventory: "vmw-inventory"
    state: present
    tower_config_file: "~/.tower_cli.cfg"

- name: Create vmw-setup job template
  become: true
  tower_job_template:
    name: vmw-setup
    job_type: run
    inventory: vmw-inventory
    project: openshift-ansible-contrib
    playbook: "reference-architecture/vmware-ansible/playbooks/setup.yaml"
    machine_credential: vmw-privkey
    cloud_credential: vmw
    state: present
    tower_config_file: "~/.tower_cli.cfg"

- name: Create vmw-nfs job template
  become: true
  tower_job_template:
    name: vmw-nfs
    job_type: run
    inventory: vmw-inventory
    project: openshift-ansible-contrib
    playbook: "reference-architecture/vmware-ansible/playbooks/nfs.yaml"
    machine_credential: vmw-privkey
    cloud_credential: vmw
    state: present
    tower_config_file: "~/.tower_cli.cfg"

- name: Create vmw-prod job template
  become: true
  tower_job_template:
    name: vmw-prod
    job_type: run
    inventory: vmw-inventory
    project: openshift-ansible-contrib
    playbook: "reference-architecture/vmware-ansible/playbooks/prod.yaml"
    machine_credential: vmw-privkey
    cloud_credential: vmw
    state: present
    tower_config_file: "~/.tower_cli.cfg"

- name: Create vmw-haproxy job template
  become: true
  tower_job_template:
    name: vmw-haproxy
    job_type: run
    inventory: vmw-inventory
    project: openshift-ansible-contrib
    playbook: "reference-architecture/vmware-ansible/playbooks/haproxy.yaml"
    machine_credential: vmw-privkey
    cloud_credential: vmw
    state: present
    tower_config_file: "~/.tower_cli.cfg"

- name: Create vmw-ocp-install job template
  become: true
  tower_job_template:
    name: vmw-ocp-install
    job_type: run
    inventory: vmw-inventory
    project: openshift-ansible-contrib
    playbook: "reference-architecture/vmware-ansible/playbooks/ocp-install.yaml"
    machine_credential: vmw-privkey
    cloud_credential: vmw
    state: present
    tower_config_file: "~/.tower_cli.cfg"

- name: Create vmw-ocp-configure job template
  become: true
  tower_job_template:
    name: vmw-ocp-configure
    job_type: run
    inventory: vmw-inventory
    project: openshift-ansible-contrib
    playbook: "reference-architecture/vmware-ansible/playbooks/ocp-configure.yaml"
    machine_credential: vmw-privkey
    cloud_credential: vmw
    state: present
    tower_config_file: "~/.tower_cli.cfg"

- name: Create vmw-ocp-demo job template
  become: true
  tower_job_template:
    name: vmw-ocp-demo
    job_type: run
    inventory: vmw-inventory
    project: openshift-ansible-contrib
    playbook: "reference-architecture/vmware-ansible/playbooks/ocp-demo.yaml"
    machine_credential: vmw-privkey
    cloud_credential: vmw
    state: present
    tower_config_file: "~/.tower_cli.cfg"

- name: Create workflow-ocp-vmw-install
  command: tower-cli workflow create --name="workflow-ocp-vmw-install" --organization="Default" --description="A workflow for deploying OCP on VMW" -e @workflow-ocp-vmw-install-extravars.yaml

